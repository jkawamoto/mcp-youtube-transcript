[build-system]
build-backend = "hatchling.build"

requires = [ "hatchling" ]

[project]
name = "mcp-youtube-transcript"
version = "0.3.5"
description = "MCP server retrieving transcripts of YouTube videos"
readme = "README.md"
authors = [
    { name = "Junpei Kawamoto", email = "kawamoto.junpei@gmail.com" },
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
# Pin dependency versions for security and reproducibility
dependencies = [
    "beautifulsoup4==4.13.5",  # Pinned to specific version
    "click>=8.1.8,<9.0.0",     # Allow patch updates only
    "mcp>=1.9,<2.0.0",         # Allow minor updates in v1
    "pydantic>=2.10.6,<3.0.0", # Allow minor updates in v2
    "requests>=2.32.3,<3.0.0", # Allow patch updates only
    "rich-click>=1.8.8,<2.0.0", # Allow minor updates in v1
    "youtube-transcript-api>=1.1,<2.0.0", # Allow minor updates in v1
]

scripts.mcp-youtube-transcript = "mcp_youtube_transcript.cli:main"

[dependency-groups]
dev = [
    "bump-my-version>=1.1.1",
    "pre-commit>=4.1",
    "pre-commit-uv>=4.1.4",
    "pytest>=8.3.5",
    "pytest-mock>=3.14",
    "types-requests>=2.32.0.20250306",
    "ruff>=0.1.0",
    "bandit>=1.7.0",
]

[tool.ruff]
target-version = "py310"
line-length = 120

# Add security-focused ruff rules
[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "S",   # flake8-bandit (security)
    "T20", # flake8-print
    "Q",   # flake8-quotes
]
ignore = [
    "S101", # Allow assert statements (common in tests)
]

[tool.pyproject-fmt]
indent = 4

[tool.bumpversion]
current_version = "0.3.5"
commit = true
pre_commit_hooks = [
    "uv sync",
    "git add uv.lock",
]

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
strict = true  # Enable strict mode for better security

# Security scanning configuration
[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[tool.safety]
ignore = []  # Add CVE IDs to ignore if needed